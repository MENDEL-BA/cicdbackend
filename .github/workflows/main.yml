name: Main CI GitHub Actions
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  back-end-ci:
    name: Build, test and analyze Back
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: 'back'

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'temurin'
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build app
        run: mvn clean install
      - name: Run tests
        run: mvn clean test
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=MENDEL-BA_cicdbackend

  
  generate-coverage:
    name: Generate code coverage
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: 'back'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Build and Test
        run: mvn clean verify

      - name: Generate Coverage Report
        run: mvn jacoco:report

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: target/site/jacoco

  publish-coverage:
    runs-on: ubuntu-latest
    needs: generate-coverage
    if: success()

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Download Coverage Report
        uses: actions/download-artifact
        with:
          name: coverage-report

      - name: Set up Git
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"

      - name: Commit and Push Coverage Report
        run: |
          git add .
          git commit -m "Add coverage report"
          git push

  build-image-docker:
    name: Build image Doker of backend and push to docker hub
    runs-on: ubuntu-latest
    needs: back-end-ci
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./back
          file: ./back/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USER }}/bobapp:latest


  front-ci:
    name: Build test and analyse Front
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: 'front'

    steps:
      - uses: actions/checkout@v3
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Install Packages
        run: npm ci
      - name: Build
        run: npm run build
      - name: Run Tests
        run: npm test -- --watch=false --browsers=ChromeHeadless --code-coverage
      - name: Cache coverage report
        uses: actions/cache@v3
        with:
          path: front/coverage/bobapp/lcov.info
          key: ${{ runner.os }}-front-lcov-${{ hashFiles('front/coverage/bobapp/lcov.info') }}
          restore-keys: ${{ runner.os }}-front-lcov
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: front


  front-image-docker:
    name: Build image Doker of Front and push to docker hub
    runs-on: ubuntu-latest
    needs: front-ci
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./front
          file: ./front/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USER }}/front-bobapp:latest